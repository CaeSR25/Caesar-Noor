# -*- coding: utf-8 -*-
"""Filter batas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CSgkngbyRq87G8_1yMjfhJXWNk1cD9Zi

1207070025 Caesar Noor
"""

# Commented out IPython magic to ensure Python compatibility.

# impor library 
import matplotlib.pyplot as plt
# %matplotlib inline

from skimage import data
from skimage.io import imread
from skimage.color import rgb2gray 
import numpy as np

# membaca dan memberi label pada gambar input
citra1 = imread(fname="mobil.tif")
citra2 = imread(fname="boneka2.tif")

# memberikan bentuk pada gambar 1 dan 2
print('Shape citra 1 : ', citra1.shape)
print('Shape citra 1 : ', citra2.shape)

# mengatur ukuran gambar 1 dan 2
fig, axes = plt.subplots(1, 2, figsize=(10, 10))
ax = axes.ravel()

# menampilkan dan memberikan judul pada gambar 1 dan 2
ax[0].imshow(citra1, cmap = 'gray')
ax[0].set_title("Citra 1")
ax[1].imshow(citra2, cmap = 'gray')
ax[1].set_title("Citra 2")

# menyalin dan memberikan label pada gamabr 1 dan 2
copyCitra1 = citra1.copy()
copyCitra2 = citra2.copy()

# memberikan variable keluaran gambar 1 dan 2
m1,n1 = copyCitra1.shape
output1 = np.empty([m1, n1])

m2,n2 = copyCitra2.shape
output2 = np.empty([m2, n2])

# memberikan bentuk dan nilai variable pada gambar 1
print('Shape copy citra 1 : ', copyCitra1.shape)
print('Shape output citra 1 : ', output1.shape)
print('m1 : ',m1)
print('n1 : ',n1)
print()

# memberikan bentuk dan nilai variable psda gambar 2
print('Shape copy citra 2 : ', copyCitra2.shape)
print('Shape output citra 3 : ', output2.shape)
print('m2 : ',m2)
print('n2 : ',n2)
print()

# rumus fungsi proses filter batas gambar 1
for baris in range(0, m1-1):
    for kolom in range(0, n1-1):
        
        a1 = baris
        b1 = kolom
        
        arr = np.array([copyCitra1[a1-1, b1-1], copyCitra1[a1-1, b1], copyCitra1[a1, b1+1], \
            copyCitra1[a1, b1-1], copyCitra1[a1, b1+1], copyCitra1[a1+1, b1-1],  \
            copyCitra1[a1+1, b1], copyCitra1[a1+1, b1+1]])
        
        minPiksel = np.amin(arr);        
        maksPiksel = np.amax(arr);    
            
        if copyCitra1[baris, kolom] < minPiksel :
            output1[baris, kolom] = minPiksel
        else :
            if copyCitra1[baris, kolom] > maksPiksel :
                output1[baris, kolom] = maksPiksel
            else :
                output1[baris, kolom] = copyCitra1[baris, kolom]

# rumus fungsi proses filter batas gambar 2
for baris1 in range(0, m2-1):
    for kolom1 in range(0, n2-1):
        
        a1 = baris1
        b1 = kolom1
        
        arr = np.array([copyCitra2[a1-1, b1-1], copyCitra2[a1-1, b1], copyCitra2[a1, b1+1], \
            copyCitra2[a1, b1-1], copyCitra2[a1, b1+1], copyCitra2[a1+1, b1-1],  \
            copyCitra2[a1+1, b1], copyCitra2[a1+1, b1+1]])
        
        minPiksel = np.amin(arr);        
        maksPiksel = np.amax(arr);    
            
        if copyCitra2[baris1, kolom1] < minPiksel :
            output2[baris1, kolom1] = minPiksel
        else :
            if copyCitra2[baris1, kolom1] > maksPiksel :
                output2[baris1, kolom1] = maksPiksel
            else :
                output2[baris1, kolom1] = copyCitra2[baris1, kolom1]

# mengatur ukuran gambar keluaran 1 dan 2
fig, axes = plt.subplots(2, 2, figsize=(10, 10))
ax = axes.ravel()

# menampilkan dan memberikan judul pada gambar input 1
ax[0].imshow(citra1, cmap = 'gray')
ax[0].set_title("Input Citra 1")

# menampilkan dan memberikan judul pada gambar input 2
ax[1].imshow(citra2, cmap = 'gray')
ax[1].set_title("Input Citra 2")

# menampilkan dan memberikan judul pada gambar keluaran 1
ax[2].imshow(output1, cmap = 'gray')
ax[2].set_title("Output Citra 1")

# menampilkan dan memberikan judul pada gambar keluaran 2
ax[3].imshow(output2, cmap = 'gray')
ax[3].set_title("Output Citra 2")