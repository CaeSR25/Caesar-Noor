# -*- coding: utf-8 -*-
"""Prak9_MODUL DETEKSI TEPI.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jbjxo3HAxBVP-WPZcv-SoewW8mrl5Bna

Filter Sobel
"""

import cv2 as cv
import numpy as np
from matplotlib import pyplot as plt
from skimage import data
from google.colab.patches import cv2_imshow

img = cv.imread("G.jpg")

#sobel
img_sobelx = cv.Sobel(img, cv.CV_8U,1,0,ksize=5)
img_sobely = cv.Sobel(img, cv.CV_8U,0,1,ksize=5)
img_sobel = img_sobelx + img_sobely

fig, axes = plt.subplots(4, 2, figsize=(20, 20))

ax = axes.ravel()

ax[0].imshow(img, cmap = 'gray')
ax[0].set_title("Citra Input")
ax[1].hist (img.ravel(), bins = 256)
ax[1].set_title("Histogram Citra Input")

ax[2].imshow(img_sobelx, cmap = 'gray')
ax[2].set_title("Citra Output")
ax[3].hist (img_sobelx.ravel(), bins = 256)
ax[3].set_title("Histogram Citra Output")

ax[4].imshow(img_sobely, cmap = 'gray') 
ax[4].set_title("citra Output")
ax[5].hist(img_sobely.ravel(), bins = 256)
ax[5].set_title("Histogram Citra Output")

ax[6].imshow(img_sobel, cmap = 'gray')
ax[6].set_title("Citra Output")
ax[7].hist(img_sobel.ravel(), bins = 256)
ax[7].set_title("Histogram Citra Output")

fig.tight_layout()

"""Filter Prewitt"""

#prewitt
kernelx = np.array([[1,1,1],[0,0,0],[-1,-1,-1]])
kernely = np.array([[-1,0,1],[-1,0,1],[-1,0,-1]])

img_prewittx = cv.filter2D(img, -1, kernelx)
img_prewitty = cv.filter2D(img, -1, kernely)
img_prewitt = img_prewittx + img_prewitty

fig, axes = plt.subplots(4, 2, figsize=(20, 20))

ax = axes.ravel()

ax[0].imshow(img, cmap = 'gray')
ax[0].set_title("Citra Input")
ax[1].hist (img.ravel(), bins = 256)
ax[1].set_title("Histogram Citra Input")

ax[2].imshow(img_prewittx, cmap = 'gray')
ax[2].set_title("Citra Output Prewitt X")
ax[3].hist (img_prewittx.ravel(), bins = 256)
ax[3].set_title("Histogram Citra Output Prewitt x")

ax[4].imshow(img_prewitty, cmap = 'gray')
ax[4].set_title("citra Output Prewitt Y")
ax[5].hist(img_prewitty.ravel(), bins = 256)
ax[5].set_title("Histogram Citra Output Prewitt Y")

ax[6].imshow(img_prewitt, cmap = 'gray')
ax[6].set_title("Citra Output Prewitt")
ax[7].hist(img_prewitt.ravel(), bins = 256)
ax[7].set_title("Histogram Citra Output Prewitt")

fig.tight_layout()

"""Filter Canny"""

#canny
img_canny = cv.Canny(img,100,200)

fig, axes = plt.subplots(2, 2, figsize=(20, 20))
ax = axes.ravel()

ax[0].imshow(img, cmap = 'gray')
ax[0].set_title("Citra Input")
ax[1].hist (img.ravel(), bins = 256)
ax[1].set_title("Histogram Citra Input")

ax[2].imshow(img_canny, cmap = 'gray')
ax[2].set_title("Citra Output")
ax[3].hist (img_canny.ravel(), bins = 256)
ax[3].set_title("Histogram Citra Output")

"""Filter Laplacian"""

gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)

img1 = cv.GaussianBlur(gray,(3,3),0)

laplacian = cv.Laplacian(img1,cv.CV_64F)

plt.subplot(1,2,1),plt.imshow(img1,cmap = 'gray')
plt.title('Original'), plt.xticks([]), plt.yticks([])
plt.subplot(1,2,2),plt.imshow(laplacian,cmap = 'gray')
plt.title('Laplacian'), plt.xticks([]), plt.yticks([])
plt.show()