# -*- coding: utf-8 -*-
"""Prak5 Operasi dasar.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QpkWLMfYTLOTfbavmNYr0OQTiNFdk809

Caesar Noor 1207070025
"""

# Commented out IPython magic to ensure Python compatibility.
#Mengimpor library

# %matplotlib inline

import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import cv2
from skimage.color import rgb2gray 
from skimage.util import invert
from google.colab.patches import cv2_imshow

"""Percobaan 1 Cropping image"""

# menetapkan input citra
rayonimg = cv2.imread("Rayon.png")
ticalimg = cv2.imread("Tical.png")

# memotong tampilan citra
rayonCropped = rayonimg.copy()
rayonCropped = rayonCropped[0:256,64:320]

ticalCropped = ticalimg.copy()
ticalCropped = ticalCropped[64:256,128:320]

# mengatur matriks hasil potongan citra
print('Rayon Ori Shape : ',rayonimg.shape)
print('Rayon Crop Shape : ',rayonCropped.shape)

print('MissTical Ori Shape : ',ticalimg.shape)
print('MissTical Crop Shape : ',ticalCropped.shape)

# mengatur ukuran tampilan citra
fig, axes = plt.subplots(2, 2, figsize=(12, 12))
ax = axes.ravel()

# menampilkan hasil citra ori dan croping
ax[0].imshow(rayonimg)
ax[0].set_title("Citra Input 1")

ax[1].imshow(ticalimg, cmap='gray')
ax[1].set_title('Citra Input 2')

ax[2].imshow(rayonCropped)
ax[2].set_title("Citra Output 1")

ax[3].imshow(ticalCropped, cmap='gray')
ax[3].set_title('Citra Output 2')

"""Percobaan 2 Citra negative"""

# mengubah hasil citra yang sudah dipotong menjadi negative
inv = invert(rayonCropped)
print('Shape Input : ', rayonCropped.shape)
print('Shape Output : ',inv.shape)

# mengatur ukuran citra
fig, axes = plt.subplots(2, 2, figsize=(12, 12))
ax = axes.ravel()

# menampilkan hasil citra
ax[0].imshow(rayonCropped)
ax[0].set_title("Citra Input")

ax[1].hist(rayonCropped.ravel(), bins=256)
ax[1].set_title('Histogram Input')

ax[2].imshow(inv)
ax[2].set_title('Citra Output (Inverted Image)')

ax[3].hist(inv.ravel(), bins=256)
ax[3].set_title('Histogram Output')

copyTical = ticalCropped.copy().astype(float)

m1,n1= copyTical.shape
output1 = np.empty([m1, n1])

for baris in range(0, m1-1):
    for kolom in range(0, n1-1):
        a1 = baris
        b1 = kolom
        output1[a1, b1] = copyTical[baris, kolom] + 100
        
fig, axes = plt.subplots(2, 2, figsize=(12, 12))
ax = axes.ravel()

ax[0].imshow(ticalCropped, cmap='gray')
ax[0].set_title("Citra Input")

ax[1].hist(ticqlCropped.ravel(), bins=256)
ax[1].set_title('Histogram Input')

ax[2].imshow(output1, cmap='gray')
ax[2].set_title('Citra Output (Brightnes)')

ax[3].hist(output1.ravel(), bins=256)
ax[3].set_title('Histogram Input')